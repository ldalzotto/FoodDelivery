
drop table if exists static_images;

create table if not exists static_images
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    format TEXT NOT NULL,
    data BLOB NOT NULL
);

drop table if exists users;

create table if not exists users
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    is_validated INTEGER NOT NULL
);

drop table if exists user_validation;

create table if not exists user_validation
(
    ts INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    mail_token TEXT NOT NULL
);

drop table if exists country;

create table if not exists country
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);


create index country_name on country(name);

drop table if exists city;

create table if not exists city
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    numeric_id_0 INTEGER,
    country_id INTEGER NOT NULL,
    FOREIGN KEY(country_id) REFERENCES country(id)
);

create index city_name on city(name);

drop table if exists establishment_address;

create table if not exists establishment_address
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    street_full_name TEXT NOT NULL,
    city_id INTEGER NOT NULL,
    lat REAL NOT NULL,
    lng REAL NOT NULL,
    FOREIGN KEY(city_id) REFERENCES city(id)
);

create index establishment_address_lat on establishment_address(lat);
create index establishment_address_long on establishment_address(lng);

drop table if exists establishments;

create table if not exists establishments
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    address_id INTEGER NOT NULL,
    phone TEXT NOT NULL,
    thumb_id INTEGER,
    user_id INTEGER NOT NULL,
    FOREIGN KEY(thumb_id) REFERENCES static_images(id),
    FOREIGN KEY(user_id) REFERENCES users(id),
    FOREIGN KEY(address_id) REFERENCES establishment_address(id)
);

drop table if exists sessions;

create table if not exists sessions
(
    token TEXT NOT NULL,
    user_id INTEGER NOT NULL,
    emission_time INTEGER NOT NULL,
    expiration_time INTEGER NOT NULL,
    is_cancelled INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(id)
);

insert into country (id, name) values (1, 'France');

insert into city (id, name, numeric_id_0, country_id) values (1, 'Paris', 75000, 1);
insert into city (id, name, numeric_id_0, country_id) values (2, 'Marseille', 13000, 1);
insert into city (id, name, numeric_id_0, country_id) values (3, 'Lyon', 69000, 1);