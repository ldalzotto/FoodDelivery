drop table if exists users;

create table if not exists users
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    is_validated INTEGER NOT NULL
);

drop table if exists user_validation;

create table if not exists user_validation
(
    ts INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    mail_token TEXT NOT NULL
);

drop table if exists establishments;

create table if not exists establishments(
                                             id INTEGER PRIMARY KEY AUTOINCREMENT,
                                             name TEXT NOT NULL,
                                             address TEXT NOT NULL,
                                             phone TEXT NOT NULL,
                                             user_id INTEGER NOT NULL,
                                             FOREIGN KEY(user_id) REFERENCES users(id)
);

drop table if exists sessions;

create table if not exists sessions
(
    token TEXT NOT NULL,
    user_id INTEGER NOT NULL,
    emission_time INTEGER NOT NULL,
    expiration_time INTEGER NOT NULL,
    is_cancelled INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(id)
);

/*
select count(*) from users
where users.id == 1;

select count(*) from user_validation
where user_validation.user_id == 1
and user_validation.mail_token == '2faa5391-185c-4ce7-87ef-0e400afd1e71';

delete from user_validation
where user_validation.user_id == 1
and user_validation.mail_token == 'zdzddz';

update users
set is_validated = 1
where id == 0;

insert into users (id, username, email, password, is_validated)
values (0, 'test', 'loic.dalzotto@hotmail.fr', 'pass', 0);

insert into users (id, username, email, password, is_validated)
values (1, 'test2', 'loic2.dalzotto@hotmail.fr','pass2', 0);

select * from users
where users.username == 'test';


insert into users DEFAULT VALUES;
SELECT last_insert_rowid();

insert into establishments( name, address, phone, user_id)
VALUES ('name_test', 'address_name', 'phone_test', 2);
SELECT last_insert_rowid();
*/